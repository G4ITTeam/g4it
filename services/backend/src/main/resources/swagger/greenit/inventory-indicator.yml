openapi: "3.0.3"
info:
  title: Swagger GreenIT - Open API 3.0 - Inventory Indicator
  description: This is a Inventory Server based on the OpenAPI 3.0 specification.
  version: '1.0.0'

tags:
  - name: inventory-indicator
    description: All endpoint for the organization's inventory dataviz

paths:
  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    delete:
      summary: Endpoint to delete indicators and related data.
      description: Endpoint to delete indicators and related data.
      tags:
        - inventory-indicator
      operationId: deleteIndicators
      x-custom-role: "hasRole('INVENTORY_WRITE')"
      responses:
        "204":
          description: Indicators and related data have been removed
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          $ref: '#/components/responses/NotFoundError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators/equipments:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    get:
      description: Endpoint to retrieve equipment indicators following unit calculations of ecological impact.
      tags:
        - inventory-indicator
      operationId: getEquipmentIndicators
      x-custom-role: "hasRole('INVENTORY_READ')"
      responses:
        "200":
          description: Return equipment indicators
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/EquipmentIndicatorsRest"
        "400":
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators/applications:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    get:
      description: Endpoint to retrieve application indicators following unit calculations of ecological impact.
      tags:
        - inventory-indicator
      operationId: getApplicationIndicators
      x-custom-role: "hasRole('INVENTORY_READ')"
      responses:
        "200":
          description: Return application indicators
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationIndicatorRest"
        "400":
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators/datacenters:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    get:
      summary: Endpoint to retrieve datacenters information following unit calculations of ecological impact.
      description: Endpoint to retrieve datacenters information following unit calculations of ecological impact.
      tags:
        - inventory-indicator
      operationId: getDataCenterIndicators
      x-custom-role: "hasRole('INVENTORY_READ')"
      responses:
        "200":
          description: Return datacenters information
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/DataCentersIndicatorsRest"
        "400":
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators/physicalEquipmentsAvgAge:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    get:
      summary: endpoint to retrieve average Age of physical equipment
      description: endpoint to retrieve average Age of physical equipment
      tags:
        - inventory-indicator
      operationId: getPhysicalEquipmentAvgAge
      x-custom-role: "hasRole('INVENTORY_READ')"
      responses:
        "200":
          description: Return physical equipments average age
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalEquipmentsAvgAgeRest'
        "400":
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators/physicalEquipmentsLowImpact:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    get:
      summary: endpoint to retrieve the number of physical equipment and if they are low impact
      description: endpoint to retrieve the number of physical equipment and if they are low impact
      tags:
        - inventory-indicator
      operationId: getPhysicalEquipmentsLowImpact
      x-custom-role: "hasRole('INVENTORY_READ')"
      responses:
        "200":
          description: return physical equipment with Low impact and number
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalEquipmentLowImpactRest'
        "400":
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators/physicalEquipmentsElecConsumption:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    get:
      summary: endpoint to retrieve the electric consumption of physical equipments
      description: endpoint to retrieve the electric consumption of physical equipments
      tags:
        - inventory-indicator
      operationId: getPhysicalEquipmentElecConsumption
      x-custom-role: "hasRole('INVENTORY_READ')"
      responses:
        "200":
          description: return electric consumption of physical equipments
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalEquipmentElecConsumptionRest'
        "400":
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /subscribers/{subscriber}/organizations/{organization}/inventories/{inventoryId}/indicators/export/download:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/inventoryIdPathParam'
    get:
      summary: endpoint to download the indicators export results
      description: endpoint to download the indicators export results
      tags:
        - inventory-indicator
      operationId: getIndicatorsExportResult
      x-custom-role: "hasRole('INVENTORY_WRITE')"
      responses:
        "200":
          description: return zip file contains all the indicators results
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "400":
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        "500":
          $ref: '#/components/responses/InternalServerError'
