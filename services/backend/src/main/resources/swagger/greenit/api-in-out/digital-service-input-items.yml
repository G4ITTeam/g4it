openapi: 3.0.3
info:
  title: Swagger GreenIT - Open API 3.0 - Digital Service Indicators
  description: This is a GreenIT Server based on the OpenAPI 3.0 specification.
  version: 1.0.0

tags:
  - name: digital-service-inputs-datacenter
    description: Endpoint for digital service inputs - datacenter
  - name: digital-service-inputs-physical-equipment
    description: Endpoint for digital service inputs - physical-equipment
  - name: digital-service-inputs-virtual-equipment
    description: Endpoint for digital service inputs - virtual-equipment

paths:
  /subscribers/{subscriber}/organizations/{organization}/digital-services/{digitalServiceUid}/inputs/datacenters:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/digitalServiceUidPathParam'
    get:
      tags:
        - digital-service-inputs-datacenter
      summary: Get datacenters from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_READ')"
      operationId: getDigitalServiceInputsDatacentersRest
      responses:
        '200':
          description: return digital service in datacenters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InDatacenterRest"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - digital-service-inputs-datacenter
      summary: Post datacenter from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: postDigitalServiceInputsDatacentersRest
      requestBody:
        description: datacenter
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InDatacenterRest"
      responses:
        '200':
          description: return datacenter created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InDatacenterRest"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
  /subscribers/{subscriber}/organizations/{organization}/digital-services/{digitalServiceUid}/inputs/datacenters/{id}:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/digitalServiceUidPathParam'
      - $ref: '#/components/parameters/idPathParam'
    get:
      tags:
        - digital-service-inputs-datacenter
      summary: Get datacenter from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_READ')"
      operationId: getDigitalServiceInputsDatacenterRest
      responses:
        '200':
          description: return digital service in datacenter with id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InDatacenterRest"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - digital-service-inputs-datacenter
      summary: Update the datacenter from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: putDigitalServiceInputsDatacenterRest
      requestBody:
        description: datacenter
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InDatacenterRest"
      responses:
        '200':
          description: return datacenter in digital service in datacenter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InDatacenterRest"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"

    delete:
      tags:
        - digital-service-inputs-datacenter
      summary: delete datacenter from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: deleteDigitalServiceInputsDatacenterRest
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"

  /subscribers/{subscriber}/organizations/{organization}/digital-services/{digitalServiceUid}/inputs/physical-equipments:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/digitalServiceUidPathParam'
    get:
      tags:
        - digital-service-inputs-physical-equipment
      summary: Get physical equipments from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_READ')"
      operationId: getDigitalServiceInputsPhysicalEquipmentsRest
      responses:
        '200':
          description: return digital service in physical equipments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InPhysicalEquipmentRest"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - digital-service-inputs-physical-equipment
      summary: Post physical equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: postDigitalServiceInputsPhysicalEquipmentsRest
      requestBody:
        description: physical equipment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InPhysicalEquipmentRest"
      responses:
        '200':
          description: return physical equipment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InPhysicalEquipmentRest"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
  /subscribers/{subscriber}/organizations/{organization}/digital-services/{digitalServiceUid}/inputs/physical-equipments/{id}:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/digitalServiceUidPathParam'
      - $ref: '#/components/parameters/idPathParam'
    get:
      tags:
        - digital-service-inputs-physical-equipment
      summary: Get physical equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_READ')"
      operationId: getDigitalServiceInputsPhysicalEquipmentRest
      responses:
        '200':
          description: return digital service in physical equipment with id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InPhysicalEquipmentRest"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - digital-service-inputs-physical-equipment
      summary: Update the physical equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: putDigitalServiceInputsPhysicalEquipmentRest
      requestBody:
        description: physical equipment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InPhysicalEquipmentRest"
      responses:
        '200':
          description: return digital service in virtual equipment with id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InPhysicalEquipmentRest"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"

    delete:
      tags:
        - digital-service-inputs-physical-equipment
      summary: delete physical equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: deleteDigitalServiceInputsPhysicalEquipmentRest
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"

  /subscribers/{subscriber}/organizations/{organization}/digital-services/{digitalServiceUid}/inputs/virtual-equipments:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/digitalServiceUidPathParam'
    get:
      tags:
        - digital-service-inputs-virtual-equipment
      summary: Get virtual equipments from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_READ')"
      operationId: getDigitalServiceInputsVirtualEquipmentsRest
      responses:
        '200':
          description: return digital service in virtual equipments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InVirtualEquipmentRest"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - digital-service-inputs-virtual-equipment
      summary: Update or delete virtual equipments from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      parameters:
        - $ref: "#/components/parameters/physicalEqpIdQueryParam"
      operationId: updateDigitalServiceInputsVirtualEquipmentRest
      requestBody:
        description: virtual equipment
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/InVirtualEquipmentRest"
      responses:
        '200':
          description: return digital service in virtual equipment with id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InVirtualEquipmentRest"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - digital-service-inputs-virtual-equipment
      summary: Post virtual equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: postDigitalServiceInputsVirtualEquipmentsRest
      requestBody:
        description: virtual equipment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InVirtualEquipmentRest"
      responses:
        '200':
          description: return virtual equipment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InVirtualEquipmentRest"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
  /subscribers/{subscriber}/organizations/{organization}/digital-services/{digitalServiceUid}/inputs/virtual-equipments/{id}:
    parameters:
      - $ref: '#/components/parameters/subscriberPathParam'
      - $ref: '#/components/parameters/organizationPathParam'
      - $ref: '#/components/parameters/digitalServiceUidPathParam'
      - $ref: '#/components/parameters/idPathParam'
    get:
      tags:
        - digital-service-inputs-virtual-equipment
      summary: Get virtual equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_READ')"
      operationId: getDigitalServiceInputsVirtualEquipmentRest
      responses:
        '200':
          description: return digital service in virtual equipment with id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InVirtualEquipmentRest"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - digital-service-inputs-virtual-equipment
      summary: Update the virtual equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: putDigitalServiceInputsVirtualEquipmentRest
      requestBody:
        description: virtual equipment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InVirtualEquipmentRest"
      responses:
        '200':
          description: return digital service in virtual equipment with id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InVirtualEquipmentRest"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"

    delete:
      tags:
        - digital-service-inputs-virtual-equipment
      summary: delete virtual equipment from one digital service
      x-custom-role: "hasRole('DIGITAL_SERVICE_WRITE')"
      operationId: deleteDigitalServiceInputsVirtualEquipmentRest
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: "#/components/responses/InternalServerError"
